This is a WinBUGS program for the artificial example in Chapter 12, Section 12.6.

Model: Nonlinear Structural Equation Model with nonignorable missing data
Data Set Names: YO.dat and IR.dat
Sample Size: N=712

model{
     for(i in 1:N){
     	# structural equation
     	xi[i,1:2]~dmnorm(u[1:2],phi[1:2,1:2])
     	xxi[i]~dnorm(nu[i],psd)
     	nu[i]<-gam[1]*xi[i,1]+gam[2]*xi[i,2]+gam[3]*xi[i,1]*xi[i,1]
         dthat[i]<-xxi[i]-nu[i]
     	# missingness mechanism model
     	for(j in 1:P){  
        	R[i,j]~dbern(pi[i,j])
        	logit(pi[i,j])<- b[1]+b[2]*y[i,1]+b[3]*y[i,2]+b[4]*y[i,3]+b[5]*y[i,4]
                               +b[6]*y[i,5]+b[7]*y[i,6]+b[8]*y[i,7]+b[9]*y[i,8]
     	}
	     # measurement models
     	for(j in 1:P){ 
			y[i,j]~dnorm(mu[i,j],psi[j]) 
			ephat[i,j]<-y[i,j]-mu[i,j]
		}
        mu[i,1]<- vu[1]+xxi[i]
        mu[i,2]<- vu[2]+lam[1]*xxi[i]
        mu[i,3]<- vu[3]+xi[i,1]
        mu[i,4]<- vu[4]+lam[2]*xi[i,1]
   	 mu[i,5]<- vu[5]+lam[3]*xi[i,1]
	    mu[i,6]<- vu[6]+xi[i,2]
        mu[i,7]<- vu[7]+lam[4]*xi[i,2]
        mu[i,8]<- vu[8]+lam[5]*xi[i,2]
	 }
	
     # priors on loadings and coefficients
     vu[1]~dnorm(-0.145,4.0)        vu[2]~dnorm(-0.086,4.0)        vu[3]~dnorm(0.012,4.0) 
     vu[4]~dnorm(0.004,4.0)         vu[5]~dnorm(-0.143,4.0)        vu[6]~dnorm(-0.036,4.0) 
     vu[7]~dnorm(0.029,4.0)         vu[8]~dnorm(0.143,4.0)
     b[1]~dnorm(-2.798,4.0)         b[2]~dnorm(0.041,4.0)          b[3]~dnorm(-0.281,4.0)   
     b[4]~dnorm(0.365,4.0)          b[5]~dnorm(-0.264,4.0)         b[6]~dnorm(-0.524,4.0)
     b[7]~dnorm(-0.275,4.0)         b[8]~dnorm(-0.061,4.0)         b[9]~dnorm(0.327,4.0)
     var.lam[1]<-4.0*psi[2]		    var.lam[2]<-4.0*psi[4]		   var.lam[3]<-4.0*psi[5]
     var.lam[4]<-4.0*psi[7]		    var.lam[5]<-4.0*psi[8]		   var.gam<-4.0*psd
     lam[1]~dnorm(0.490,var.lam[1])       lam[2]~dnorm(0.188,var.lam[2])      lam[3]~dnorm(0.194,var.lam[3])
     lam[4]~dnorm(0.537,var.lam[4])       lam[5]~dnorm(0.226,var.lam[5])
     gam[1]~dnorm(-0.072,var.gam)        gam[2]~dnorm(-0.005,var.gam)      gam[3]~dnorm(0.206,var.gam)
     # priors on precisions
    for(j in 1:P){ 
		psi[j]~dgamma(10.0,4.0)
        v[j]<-1/psi[j] 
	}
    psd~dgamma(10.0,4.0)
    vd<- 1/psd
    phi[1:2,1:2]~dwish(RR[1:2,1:2],2)
    phx[1:2,1:2]<- inverse(phi[1:2,1:2])
    # put all the parameters' results into bb
    for(j in 1:8){ bb[j]<- vu[j]  }
    for(j in 1:5){ bb[8+j]<- lam[j] }
    for(j in 1:8){ bb[13+j]<- v[j] }
    for(j in 1:3){ bb[21+j]<- gam[j] }
    bb[25]<- vd 
    bb[26]<- phx[1,1] 
    bb[27]<- phx[1,2] 
    bb[28]<- phx[2,2]
    for(j in 1:9){ bb[28+j]<- b[j] }      
}# end of model


Data
list(N=712,P=8, u=c(0,0),
    RR=structure(.Data= c(2.3, 0.3,
                                          0.3,1.6),  .Dim= c(2,2)),
   y=structure(.Data=c(paste YO.dat here), .Dim=c(712,8)),
   R=structure(.Data=c(paste IR.dat here), .Dim=c(712,8)))

Three different initial values
list(gam=c(-0.5,-0.5,-0.5), lam=c(-0.4,-0.4,-0.4,-0.4,-0.4), b=c(-0.2,-0.2,-0.2,-0.2,-0.2,-0.2,-0.2,-0.2,-0.2),
     psi=c(0.6,0.7,0.8,0.75,0.65,0.76,0.85,0.89), psd=0.27,  vu=c(-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1),
     phi=structure(.Data=c(0.42,0.0,
                                          0.0,0.25),
                            .Dim=c(2,2)))


list(gam=c(0.5,0.5,0.5), lam=c(0.4,0.4,0.4,0.4,0.4), b=c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5),
     psi=c(0.3,0.47,0.48,0.5,0.35,0.36,0.45,0.49), psd=0.3,  vu=c(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1),
     phi=structure(.Data=c(0.57,-0.25,
                                          -0.25,0.46),
                            .Dim=c(2,2)))


list(gam=c(0.0,0.0,0.0), lam=c(0.0,0.0,0.0,0.0,0.0), b=c(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0),
     psi=c(0.73,0.77,0.78,0.58,0.75,0.86,0.95,0.79), psd=0.2,  vu=c(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0),
     phi=structure(.Data=c(0.51,-0.35,
                                         -0.35,0.66),
                            .Dim=c(2,2)))
